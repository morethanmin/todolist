{"version":3,"sources":["TodoContext.js","TodoList/TodoCreate.js","TodoList/TodoHead.js","TodoList/TodoItem.js","TodoList/TodoList.js","TodoList/TodoTemplate.js","TodoList/index.js","App.js","index.js"],"names":["initialState","reducer","state","action","type","concat","item","filter","todo","id","map","done","TodoStateContext","createContext","TodoDispatchContext","TodoNextIdContext","TodoContext","children","useReducer","dispatch","nextId","useRef","Provider","value","UseTodoState","context","useContext","Error","UseTodoDispatch","CircleButton","styled","button","props","open","css","InsertFormPositioner","div","InsertForm","form","Input","input","TodoCreate","useState","setOpen","setInput","NextId","UseTodoNextId","onSubmit","e","preventDefault","current","desc","onChange","target","autoFocus","placeholder","onClick","TodoHeadBlock","TodoHead","count","length","time","Date","year","getFullYear","month","getMonth","date","getDate","day","getDay","Remove","TodoItemBlock","CheckCircle","Text","TodoItem","text","onDelete","TodoListBlock","TodoList","itmes","TodoTemplateBlock","TodoTemplate","index","GlobalStyle","createGlobalStyle","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.01b3aef4.chunk.js","sourcesContent":["import React, { useReducer, createContext, useRef, useContext } from \"react\";\n\nconst initialState = [];\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"CREATE\":\n      return state.concat(action.item);\n    case \"DELETE\":\n      return state.filter((todo) => todo.id !== action.id);\n    case \"TOGGLE\":\n      return state.map((todo) =>\n        todo.id === action.id ? { ...todo, done: !todo.done } : todo\n      );\n\n    default:\n      return state;\n  }\n};\n\nconst TodoStateContext = createContext();\nconst TodoDispatchContext = createContext();\nconst TodoNextIdContext = createContext();\n\nexport function TodoContext({ children }) {\n  const [state, dispatch] = useReducer(reducer, initialState, (state) => state);\n  const nextId = useRef(0);\n  return (\n    <TodoStateContext.Provider value={state}>\n      <TodoDispatchContext.Provider value={dispatch}>\n        <TodoNextIdContext.Provider value={nextId}>\n          {children}\n        </TodoNextIdContext.Provider>\n      </TodoDispatchContext.Provider>\n    </TodoStateContext.Provider>\n  );\n}\n\nexport function UseTodoState() {\n  const context = useContext(TodoStateContext);\n  if (!context) {\n    throw new Error(\"Cannot find TodoProvider\");\n  }\n  return context;\n}\n\nexport function UseTodoDispatch() {\n  const context = useContext(TodoDispatchContext);\n  if (!context) {\n    throw new Error(\"Cannot find TodoProvider\");\n  }\n  return context;\n}\n\nexport function UseTodoNextId() {\n  const context = useContext(TodoNextIdContext);\n  if (!context) {\n    throw new Error(\"Cannot find TodoProvider\");\n  }\n  return context;\n}\n","import React, { useState } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { MdAdd } from \"react-icons/md\";\nimport { UseTodoDispatch, UseTodoNextId } from \"../TodoContext\";\n\nconst CircleButton = styled.button`\n  background: #38d9a9;\n  &:hover {\n    background: #63e6be;\n  }\n  &:active {\n    background: #20c997;\n  }\n\n  z-index: 5;\n  cursor: pointer;\n  width: 80px;\n  height: 80px;\n  display: block;\n\n  justify-content: center;\n  font-size: 60px;\n  position: absolute;\n  left: 50%;\n  bottom: 0px;\n  transform: translate(-50%, 50%);\n  color: white;\n  border-radius: 50%;\n  border: none;\n  outline: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  transition: 0.125s all ease-in;\n  ${(props) =>\n    props.open &&\n    css`\n      background: #ff6b6b;\n      &:hover {\n        background: #ff8787;\n      }\n      &:active {\n        background: #fa5252;\n      }\n      transform: translate(-50%, 50%) rotate(45deg);\n    `}\n`;\n\nconst InsertFormPositioner = styled.div`\n  width: 100%;\n  bottom: 0;\n  left: 0;\n  position: absolute;\n`;\n\nconst InsertForm = styled.form`\n  background: #f8f9fa;\n  padding-left: 32px;\n  padding-top: 32px;\n  padding-right: 32px;\n  padding-bottom: 72px;\n\n  border-bottom-left-radius: 16px;\n  border-bottom-right-radius: 16px;\n  border-top: 1px solid #e9ecef;\n`;\n\nconst Input = styled.input`\n  padding: 12px;\n  border-radius: 4px;\n  border: 1px solid #dee2e6;\n  width: 100%;\n  outline: none;\n  font-size: 18px;\n  box-sizing: border-box;\n`;\n\nfunction TodoCreate() {\n  const [open, setOpen] = useState(false);\n  const [input, setInput] = useState(\"\");\n  const onToggle = () => setOpen(!open);\n  const NextId = UseTodoNextId();\n  const dispatch = UseTodoDispatch();\n  return (\n    <>\n      {open && (\n        <InsertFormPositioner>\n          <InsertForm\n            onSubmit={(e) => {\n              e.preventDefault();\n              const item = {\n                id: NextId.current,\n                desc: input,\n                done: false,\n              };\n              dispatch({ type: \"CREATE\", item });\n\n              NextId.current += 1;\n              setOpen(false);\n              setInput(\"\");\n            }}\n          >\n            <Input\n              value={input}\n              onChange={(e) => {\n                setInput(e.target.value);\n              }}\n              autoFocus\n              placeholder=\"할 일을 입력 후, Enter 를 누르세요\"\n            />\n          </InsertForm>\n        </InsertFormPositioner>\n      )}\n      <CircleButton onClick={onToggle} open={open}>\n        <MdAdd />\n      </CircleButton>\n    </>\n  );\n}\n\nexport default TodoCreate;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { UseTodoState } from \"../TodoContext\";\nconst TodoHeadBlock = styled.div`\n  width: 100%;\n  height: 165px;\n  margin-top: 45px;\n  padding-left: 35px;\n  border-bottom: 1px solid #e9ecef;\n  h1 {\n    margin: 0px;\n    font-weight: 5px;\n    color: #3a4045;\n  }\n  h2 {\n    margin-top: 5px;\n    font-weight: 300;\n    color: #a0a0a0;\n  }\n  h3 {\n    margin-top: 40px;\n    font-weight: 5px;\n    color: #20c997;\n  }\n`;\n\nconst getDay = (time) => {\n  switch (time.getDay()) {\n    case 1:\n      return \"월\";\n    case 2:\n      return \"화\";\n    case 3:\n      return \"수\";\n    case 4:\n      return \"목\";\n    case 5:\n      return \"금\";\n    case 6:\n      return \"토\";\n    case 0:\n      return \"일\";\n  }\n};\nexport default function TodoHead() {\n  const count = UseTodoState().filter((item) => item.done === false).length;\n  const time = new Date();\n  const year = time.getFullYear();\n  const month = time.getMonth() + 1;\n  const date = time.getDate();\n  const day = getDay(time);\n\n  return (\n    <TodoHeadBlock>\n      <h1>\n        {year}년 {month}월 {date}일\n      </h1>\n      <h2>{day}요일</h2>\n      <h3>할 일 {count}개 남음</h3>\n    </TodoHeadBlock>\n  );\n}\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { MdDone } from \"react-icons/md\";\nimport { TiDelete } from \"react-icons/ti\";\n\nconst Remove = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #dee2e6;\n  font-size: 24px;\n  cursor: pointer;\n  &:hover {\n    color: #ff6b6b;\n  }\n  display: none;\n`;\n\nconst TodoItemBlock = styled.div`\n  display: flex;\n  align-items: center;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  &:hover {\n    ${Remove} {\n      display: initial;\n    }\n  }\n`;\n\nconst CheckCircle = styled.div`\n  width: 32px;\n  height: 32px;\n  border-radius: 16px;\n  border: 1px solid #ced4da;\n  font-size: 24px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 20px;\n  cursor: pointer;\n  ${(props) =>\n    props.done &&\n    css`\n      border: 1px solid #38d9a9;\n      color: #38d9a9;\n    `}\n`;\n\nconst Text = styled.div`\n  flex: 1;\n  font-size: 21px;\n  color: #495057;\n  ${(props) =>\n    props.done &&\n    css`\n      color: #ced4da;\n    `}\n`;\n\nfunction TodoItem({ id, done, text, onClick, onDelete }) {\n  return (\n    <TodoItemBlock>\n      <CheckCircle\n        onClick={() => {\n          onClick(id);\n        }}\n        done={done}\n      >\n        {done && <MdDone />}\n      </CheckCircle>\n      <Text done={done}>{text}</Text>\n      <Remove\n        onClick={() => {\n          onDelete(id);\n        }}\n      >\n        <TiDelete />\n      </Remove>\n    </TodoItemBlock>\n  );\n}\n\nexport default TodoItem;\n","import React from \"react\";\nimport TodoItem from \"./TodoItem\";\nimport styled from \"styled-components\";\nimport { UseTodoState, UseTodoDispatch } from \"../TodoContext\";\n\nconst TodoListBlock = styled.div`\n  flex: 1;\n  /* background-color: gray; */\n  display: flex;\n  padding: 20px 32px;\n  padding-bottom: 48px;\n  flex-direction: column;\n  overflow-y: auto;\n`;\n\nexport default function TodoList() {\n  const itmes = UseTodoState();\n  const dispatch = UseTodoDispatch();\n\n  const onClick = (id) => {\n    dispatch({ type: \"TOGGLE\", id: id });\n  };\n  const onDelete = (id) => {\n    dispatch({ type: \"DELETE\", id: id });\n  };\n  return (\n    <TodoListBlock>\n      {itmes.map((item) => (\n        <TodoItem\n          onClick={onClick}\n          onDelete={onDelete}\n          key={item.id}\n          id={item.id}\n          text={item.desc}\n          done={item.done}\n        />\n      ))}\n    </TodoListBlock>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst TodoTemplateBlock = styled.div`\n  margin: 0 auto;\n  margin-top: 50px;\n  max-width: 512px;\n  height: 768px;\n  background-color: white;\n  box-shadow: 0px 10px 10px 10px #e6e9ec;\n  border-radius: 20px;\n  display: flex;\n  flex-direction: column;\n  position: relative; /* 추후 박스 하단에 추가 버튼을 위치시키기 위한 설정 */\n`;\n\nexport default function TodoTemplate({ children }) {\n  return <TodoTemplateBlock>{children}</TodoTemplateBlock>;\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport TodoCreate from \"./TodoCreate\";\nimport TodoHead from \"./TodoHead\";\nimport TodoList from \"./TodoList\";\nimport TodoTemplate from \"./TodoTemplate\";\n\nexport default function index() {\n  return (\n    <TodoTemplate>\n      <TodoHead />\n      <TodoList />\n      <TodoCreate />\n    </TodoTemplate>\n  );\n}\n","import TodoList from \"./TodoList\";\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport { TodoContext } from \"./TodoContext\";\nconst GlobalStyle = createGlobalStyle`\n    body{\n        background-color :#e9ecef;\n        margin: 0px;\n        padding: 0px;\n    }\n`;\n\nconst Title = styled.div`\n  width: 300px;\n  padding-top: 40px;\n  font-size: 50px;\n  font-weight: bold;\n  text-align: center;\n  margin: 0 auto;\n`;\n\nconst TodoListPosition = styled.div`\n  margin-top: 50px;\n  margin: 0 auto;\n`;\n\nfunction App() {\n  return (\n    <TodoContext>\n      <GlobalStyle />\n\n      {/* <Title>Jade's Widget</Title> */}\n      <TodoList></TodoList>\n    </TodoContext>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}